{"ast":null,"code":"var _jsxFileName = \"D:\\\\Expense-handler-React\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"./components/Header\";\nimport \"./styles.css\";\nimport ExpenseHolder from \"./components/ExpenseHolder\";\nimport NewExpense from \"./components/newExpenses/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dummyYearArray = [\"2022\", \"2021\", \"2020\", \"2019\"];\nexport default function App() {\n  _s();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const expenseArray = Object.values(state).map(item => {\n    return {\n      ...item,\n      date: new Date(item.date)\n    };\n  });\n  const [yearArray, setYearArray] = useState(dummyYearArray);\n  const yearCheck = useCallback(yearEntered => {\n    return !yearArray.includes(yearEntered);\n  }, [yearArray]);\n  function addExpenseHandler(expense) {\n    let dateYear = expense.date.getFullYear().toString();\n    if (yearCheck(dateYear)) {\n      setYearArray(prevYearState => {\n        return [...prevYearState, dateYear];\n      });\n    }\n    dispatch({\n      type: \"add\",\n      data: expense\n    });\n  }\n  useEffect(() => {\n    const yearsToAdd = expenseArray.map(item => {\n      if (yearCheck(item.date.getFullYear().toString())) {\n        return item.date.getFullYear().toString();\n      }\n      return null; // Ensure a value is returned in all cases\n    });\n\n    yearsToAdd.forEach(item => {\n      if (item) {\n        if (yearCheck(item)) {\n          setYearArray(prevYearState => {\n            return [...prevYearState, item];\n          });\n        }\n      }\n    });\n    console.log(\"years to add >>>>\", yearsToAdd);\n  }, [expenseArray, yearCheck]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Expense Handler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpenses: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseHolder, {\n      yearsList: yearArray,\n      items: expenseArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xKHK9mErfOGrGtyQBmkcWx7+bTw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","Header","ExpenseHolder","NewExpense","jsxDEV","_jsxDEV","dummyYearArray","App","_s","dispatch","state","expenseArray","Object","values","map","item","date","Date","yearArray","setYearArray","yearCheck","yearEntered","includes","addExpenseHandler","expense","dateYear","getFullYear","toString","prevYearState","type","data","yearsToAdd","forEach","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddExpenses","yearsList","items","_c","$RefreshReg$"],"sources":["D:/Expense-handler-React/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport \"./styles.css\";\r\nimport ExpenseHolder from \"./components/ExpenseHolder\";\r\nimport NewExpense from \"./components/newExpenses/NewExpense\";\r\n\r\nlet dummyYearArray = [\"2022\", \"2021\", \"2020\", \"2019\"];\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const expenseArray = Object.values(state).map((item) => {\r\n    return { ...item, date: new Date(item.date) };\r\n  });\r\n\r\n  const [yearArray, setYearArray] = useState(dummyYearArray);\r\n\r\n  const yearCheck = useCallback(\r\n    (yearEntered) => {\r\n      return !yearArray.includes(yearEntered);\r\n    },\r\n    [yearArray]\r\n  );\r\n\r\n  function addExpenseHandler(expense) {\r\n    let dateYear = expense.date.getFullYear().toString();\r\n    if (yearCheck(dateYear)) {\r\n      setYearArray((prevYearState) => {\r\n        return [...prevYearState, dateYear];\r\n      });\r\n    }\r\n\r\n    dispatch({ type: \"add\", data: expense });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const yearsToAdd = expenseArray.map((item) => {\r\n      if (yearCheck(item.date.getFullYear().toString())) {\r\n        return item.date.getFullYear().toString();\r\n      }\r\n      return null; // Ensure a value is returned in all cases\r\n    });\r\n\r\n    yearsToAdd.forEach((item) => {\r\n      if (item) {\r\n        if (yearCheck(item)) {\r\n          setYearArray((prevYearState) => {\r\n            return [...prevYearState, item];\r\n          });\r\n        }\r\n      }\r\n    });\r\n    console.log(\"years to add >>>>\", yearsToAdd);\r\n  }, [expenseArray, yearCheck]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header>Expense Handler</Header>\r\n      <NewExpense onAddExpenses={addExpenseHandler} />\r\n      <ExpenseHolder yearsList={yearArray} items={expenseArray} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}