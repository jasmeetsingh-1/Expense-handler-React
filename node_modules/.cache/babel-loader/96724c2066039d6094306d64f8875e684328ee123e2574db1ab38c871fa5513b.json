{"ast":null,"code":"const initalExpenses = [{\n  id: \"e1\",\n  title: \"Toilet Paper\",\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: \"e2\",\n  title: \"New TV\",\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: \"e3\",\n  title: \"book\",\n  amount: 30.99,\n  date: new Date(2022, 3, 4)\n}, {\n  id: \"e4\",\n  title: \"Car Insurance\",\n  amount: 294.67,\n  date: new Date(2020, 2, 28)\n}, {\n  id: \"e5\",\n  title: \"New Desk (Wooden)\",\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\nfunction reducerFunction(state = initalExpenses, action) {\n  if (action.type === \"add\") {\n    //action would contain the new Expenses to add\n    const updatedItems = Object.values(state).map(item => {\n      return {\n        ...item,\n        date: new Date(item.date)\n      };\n    });\n    const newItems = [...updatedItems, action.data];\n    // console.log(\"updatedItem>>>>>>>\", updatedItems);\n    // console.log(\"newitem>>>>>>>\", newItems);\n    return newItems;\n  }\n  return state;\n}\nexport default reducerFunction;","map":{"version":3,"names":["initalExpenses","id","title","amount","date","Date","reducerFunction","state","action","type","updatedItems","Object","values","map","item","newItems","data"],"sources":["D:/Expense-handler-React/src/components/redux-store/reducer.js"],"sourcesContent":["const initalExpenses = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  { id: \"e3\", title: \"book\", amount: 30.99, date: new Date(2022, 3, 4) },\r\n  {\r\n    id: \"e4\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2020, 2, 28),\r\n  },\r\n  {\r\n    id: \"e5\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nfunction reducerFunction(state = initalExpenses, action) {\r\n  if (action.type === \"add\") {\r\n    //action would contain the new Expenses to add\r\n    const updatedItems = Object.values(state).map((item) => {\r\n      return { ...item, date: new Date(item.date) };\r\n    });\r\n    const newItems = [...updatedItems, action.data];\r\n    // console.log(\"updatedItem>>>>>>>\", updatedItems);\r\n    // console.log(\"newitem>>>>>>>\", newItems);\r\n    return newItems;\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default reducerFunction;\r\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,CACrB;EACEC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,cAAc;EACrBC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,CAAC,EACD;EAAEJ,EAAE,EAAE,IAAI;EAAEC,KAAK,EAAE,QAAQ;EAAEC,MAAM,EAAE,MAAM;EAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAAE,CAAC,EAC1E;EAAEJ,EAAE,EAAE,IAAI;EAAEC,KAAK,EAAE,MAAM;EAAEC,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;AAAE,CAAC,EACtE;EACEJ,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,CAAC,EACD;EACEJ,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,mBAAmB;EAC1BC,MAAM,EAAE,GAAG;EACXC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,CAAC,CACF;AAED,SAASC,eAAeA,CAACC,KAAK,GAAGP,cAAc,EAAEQ,MAAM,EAAE;EACvD,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB;IACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAAC,CAACM,GAAG,CAAEC,IAAI,IAAK;MACtD,OAAO;QAAE,GAAGA,IAAI;QAAEV,IAAI,EAAE,IAAIC,IAAI,CAACS,IAAI,CAACV,IAAI;MAAE,CAAC;IAC/C,CAAC,CAAC;IACF,MAAMW,QAAQ,GAAG,CAAC,GAAGL,YAAY,EAAEF,MAAM,CAACQ,IAAI,CAAC;IAC/C;IACA;IACA,OAAOD,QAAQ;EACjB;EACA,OAAOR,KAAK;AACd;AAEA,eAAeD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}